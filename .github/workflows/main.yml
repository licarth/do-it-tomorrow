name: CI
on: push

jobs:
  build_docker_agent:
    name: Build Agent Docker image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: agent
    env:
      IMAGE_NAME: europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_PROJECT_ID }}/do-it-tomorrow/do-it-tomorrow
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: install myke
        run: |
          wget -qO /usr/local/bin/myke https://github.com/omio-labs/myke/releases/download/v1.0.2/myke_linux_amd64
          chmod +x /usr/local/bin/myke
          myke --version
      # we first need to install & build the domain
      - run: npm i && npm run build
        working-directory: domain
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: gcloud auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
      - name: setup docker cli for gcloud
        run: |
          gcloud auth configure-docker europe-west3-docker.pkg.dev
      - run: myke copy-domain
        working-directory: ./
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./agent
          file: ./agent/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ format('{0}:{1}', env.IMAGE_NAME, github.sha) }},${{ format('{0}:{1}', env.IMAGE_NAME, 'latest') }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Replace docker cache with new one to save it
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy_kubernetes:
    name: Deploy with helmfile
    defaults:
      run:
        working-directory: agent
    runs-on: ubuntu-latest
    needs:
      - build_docker_agent
      - tests
    if: github.ref == 'refs/heads/main'
    env:
      IMAGE_TAG: ${{ github.sha }}
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.2
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v1.2.0
      - name: gcloud auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}"
      - name: setup gcloud sdk
        uses: google-github-actions/setup-gcloud@v1
      - name: Setup Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.20.2
      - name: Setup kubectl for cluster
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: autopilot-cluster-1
          location: europe-west3
          project_id: "${{ secrets.GOOGLE_PROJECT_ID }}"
      - name: Deploy and wait
        run: helmfile sync

  deploy_api_fly:
    name: Deploy api with fly
    defaults:
      run:
        working-directory: agent
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - tests
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      # we first need to install & build the domain
      - run: npm i && npm run build
        working-directory: domain
      - run: npm run deploy

  deploy_website_fly:
    name: Deploy website with fly
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      # we first need to install & build the domain
      - run: npm i && npm run build
        working-directory: domain
      - run: npm run deploy

  tests:
    name: Run agent tests
    defaults:
      run:
        working-directory: agent
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # we first need to install & build the domain
      - run: npm i && npm run build
        working-directory: domain
      - name: Cache firebase emulators
        uses: actions/cache@v2
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-emulators-${{ hashFiles('~/.cache/firebase/emulators/**') }}
      - name: docker-compose (Zookeeper)
        run: docker-compose --env-file .env.test up -d
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test-ci

  deploy_firebase_rules:
    name: Deploy firebase rules in production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_DEPLOYMENT_SERVICE_ACCOUNT_KEY }}
    steps:
      - name: install myke
        run: |
          wget -qO /usr/local/bin/myke https://github.com/omio-labs/myke/releases/download/v1.0.2/myke_linux_amd64
          chmod +x /usr/local/bin/myke
          myke --version
      - uses: actions/checkout@v2
      - name: install firebase cli
        run: npm install -g firebase-tools gomplate
      - name: gcloud auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.FIREBASE_DEPLOYMENT_SERVICE_ACCOUNT_KEY }}
      - run: firebase use doi-production

      - run: myke timetriggers/apply_rules
        env:
          NAMESPACE: doi-production
